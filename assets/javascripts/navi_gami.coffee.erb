plugin_name = 'navi gami'

# get fabmanager main module
app = angular.module('application')


# initialize module and configure routing
angular.module('application.navi_gami', ['application'])
  .config [
    '$stateProvider',
    ($stateProvider) ->
      $stateProvider
        .state 'app.admin.navi_gami',
          url: '/navinum_gamification'
          views:
            'main@':
              templateUrl: '<%= asset_path "templates/navi_gami.html" %>'
              controller: 'NGController'
          resolve:
            challengesPromise: ['NGChallenge', (NGChallenge)->
              NGChallenge.query().$promise
            ]
            translations: ['Translations', (Translations)->
              Translations.query(['navi_gami']).$promise
            ]

  ]

  .factory 'NGChallenge', ["$resource", ($resource)->
    $resource "/navi_gami/challenges/:id",
      {id: "@id"},
      update:
        method: 'PUT'
  ]

  .controller 'NGController', ['$scope', 'NGChallenge', 'challengesPromise', '_t', ($scope, NGChallenge, challengesPromise, _t)->
    $scope.challenges = challengesPromise

    $scope.save = (index)->
      NGChallenge.update(id: $scope.challenges[index].id, { challenge: $scope.challenges[index] }, (challenge)->
        $scope.challenges[index] = challenge
      )
  ]









# injects dependecy to main app module
app.requires.push('application.navi_gami')


window.Fablab.adminNavLinks = window.Fablab.adminNavLinks || []
window.Fablab.adminNavLinks.push(
  {
    state: 'app.admin.navi_gami'
    linkText: 'Gamification'
    linkIcon: 'gamepad'
  }
)
